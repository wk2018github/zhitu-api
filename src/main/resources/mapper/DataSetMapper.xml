<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zhitu.sq.dataset.mapper.DataSetMapper" >
 <resultMap id="BaseResultMap" type="zhitu.sq.dataset.model.DataSet" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="typeId" property="typeId" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="projectId" property="projectId" jdbcType="VARCHAR" />
    <result column="dataTable" property="dataTable" jdbcType="VARCHAR" />
    <result column="rdbId" property="rdbId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createTime, name, description, typeId, userId, projectId, dataTable, rdbId
  </sql>
   <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from zt_sys_dataset
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="zhitu.sq.dataset.model.DataSet" >
    insert into zt_sys_dataset (id, createTime, name, 
      description, typeId, userId, 
      projectId, dataTable, rdbId
      )
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=VARCHAR}, #{dataTable,jdbcType=VARCHAR}, #{rdbId,jdbcType=VARCHAR}
      )
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from zt_sys_dataset
    where id = #{id,jdbcType=VARCHAR}
  </delete>
   <update id="updateDataSet" parameterType="zhitu.sq.dataset.model.DataSet" >
    update zt_sys_dataset
    <set >
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        typeId = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="dataTable != null" >
        dataTable = #{dataTable,jdbcType=VARCHAR},
      </if>
      <if test="rdbId != null" >
        rdbId = #{rdbId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="findByName" resultType="java.util.Map">
   	SELECT d.*, if(d.typeId='ftp_file',0,1) as type,f.description AS typeDesc
	FROM zt_sys_dataset d
	LEFT JOIN zt_sys_dataset_type f ON f.typeId = d.typeId
	where d.userId = #{userId}
	<if test="name!=null and name!=''">
		and d.`name` like concat(concat('%',#{name}),'%')
	</if>
	<if test="projectId!=null and projectId!=''">
		and d.projectId =#{projectId}
	</if>
	ORDER BY d.createTime DESC
  </select>
  
  <select id="chartsByName" resultType="java.util.Map">
    SELECT d.typeId,t.description,COUNT(*) as cout 
   	FROM  zt_sys_dataset d
	LEFT JOIN zt_sys_dataset_type t on t.typeId =d.typeId
   where userId =#{userId}
  	 <if test="projectId !=null and projectId !=''">
		and projectId =#{projectId}
	</if>
	<if test="name!=null and name!=''">
		and `name` like concat(concat('%',#{name}),'%')
	</if>
    GROUP BY d.typeId
  </select>
  
  <select id="queryDBType" resultType="zhitu.sq.dataset.controller.vo.Select">
		SELECT
		id,`key` AS `code`,`value` AS `name`
		FROM `zt_sys_dict` d
		WHERE d.`code` = 'databaseType' AND d.`parentValue` = 0
	</select>
	<!-- 插入ftp file -->
	<insert id="insertFtpFile" parameterType="zhitu.sq.dataset.model.FtpFile" >
		insert into zt_data_ftp_file (id, createTime, fileName, fileAbstract, ftpurl, datasetId)
        values
        (#{id,jdbcType=VARCHAR}, now(),#{fileName,jdbcType=VARCHAR},
        #{fileAbstract,jdbcType=LONGVARCHAR}, #{ftpurl,jdbcType=VARCHAR},#{datasetId,jdbcType=VARCHAR})
	</insert>
</mapper>